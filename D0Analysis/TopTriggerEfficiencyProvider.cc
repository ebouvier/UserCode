#include "./TopTriggerEfficiencyProvider.h"
#include <algorithm>
#include <iostream>
#include "TMath.h"

TopTriggerEfficiencyProvider::TopTriggerEfficiencyProvider(bool verbose, double *lumis)
  : verbose(verbose) {
  for(int r = RunBEGIN; r<RunEND; r++) setLumi(Runs(r), lumis ? lumis[r] : lumiDefaults[r]);
}


double TopTriggerEfficiencyProvider::     //l+jets crosstrigger efficiency
get_weight(double lep_pt, double lep_eta,
	   double jet_pt, double jet_eta, // fourth leading jet
	   int npvertices, int njets,     // number primary vertices, number of jets
	   bool LepIsMuon, JES jes        // JES NOMINAL(0), UP(1), DOWN(-1)
	   ) const {

  double lwgt = GetLeptonWeight( LepIsMuon, lep_pt, lep_eta, npvertices);
  double jwgt = GetJetWeight( jet_pt, jet_eta, njets, jes);
  
  //  std::cout << " => get_weight : Lepton WGT = " << lwgt << std::endl;
  //  std::cout << " => get_weight : Jet    WGT = " << jwgt << std::endl;

  return (  0.0001    //factor to convert %^2 to efficiency on [0,1]
	    * lwgt    // weight of the leptonic leg of the cross trigger
	    * jwgt ); // weight of the hadronic leg of the cross trigger
}

double TopTriggerEfficiencyProvider::     //l+jets crosstrigger leptonic leg efficiency *100
GetLeptonWeight(bool isMu, double pt, double eta, int npvertices) const {
  int bin_x = isMu 
    ? int( std::lower_bound( MuEtaEdges, MuEtaEdges + nMuEtabins, eta ) - MuEtaEdges ) 
    : int( std::lower_bound( ElEtaEdges, ElEtaEdges + nElEtabins, eta ) - ElEtaEdges );
  int bin_y = isMu
    ? int( std::lower_bound( MuPtEdges, MuPtEdges + nMuPtbins, std::min( muPtMax, pt ) ) - MuPtEdges)
    : int( std::lower_bound( ElPtEdges, ElPtEdges + nElPtbins, std::min( elPtMax, pt ) ) - ElPtEdges);

  if( fabs(eta) > (isMu?muEtaMax:elEtaMax) || pt < (isMu?muPtMin:elPtMin) || (!isMu && (bin_x ==2 || bin_x == 8))) {
    if(verbose) warn(isMu?"muon":"electron");
    return 100;
  }
  
  double sumL(0), sumWL(0);
  for (int r=RunBEGIN; r<RunEND; r++) {
    sumL += luminosity[r];
    sumWL += luminosity[r] * VFunction( npvertices, isMu ? Mu[r][bin_x][bin_y] : El[r][bin_x][bin_y]);
    }
  return std::min(100., std::max(0., sumWL / sumL ));
}


double TopTriggerEfficiencyProvider::   //evaluate linear parameterization of efficiency(x)
VFunction(int x, const double par[2]) const {
  return std::min( 100., std::max( 0., par[0]*x + par[1] ));
}


double TopTriggerEfficiencyProvider::     //l+jets crosstrigger hadronic leg efficiency *100
GetJetWeight(double pt, double eta, int njets, JES jes) const {
  if( pt < jetPtMin || njets < int(nJetMin) || fabs(eta) > jetEtaMax ) {
    if(verbose) warn("jet");
    return 100;
  }
  
  int bin_x = std::min( int(nJetNbins-1), std::max(0, int(njets-nJetMin)));
  int bin_y = int( std::lower_bound( JetEtaEdges, JetEtaEdges + nJetEtabins, eta ) - JetEtaEdges );
  int bin_z = int( std::lower_bound( JetPtEdges,  JetPtEdges  + nJetPtbins,  std::min(pt, jetPtMax) ) - JetPtEdges );

  double sumL(0), sumWL(0);
  for (int r=RunBEGIN; r<RunEND; r++) {
    sumL += luminosity[r];
    sumWL += luminosity[r] * (jes==DOWN ? JetDown : 
			      jes==UP   ? JetUp   : Jet)[r][bin_x][bin_y][bin_z];
  }
  return std::min(100., std::max(0., sumWL / sumL ));
}


void TopTriggerEfficiencyProvider::
warn(const char* obj) const {
  std::cout << "Your " << obj
	    << " cut is not in sync with the Top Reference Selection! "
	    << "Please check your cutset again. Weight artificially 1." << std::endl;
}


double TopTriggerEfficiencyProvider::   //unused, but maybe necessary in future
TurnOn(double x, double par[4]) const
{
  double arg  = fabs(TMath::Sqrt(x)*par[1]) > 0 
    ? (x - par[0])/ (TMath::Sqrt(x)*par[1]) 
    : 100000000000.;
  double arg2 = (x - par[3])/ (TMath::Sqrt(2.)*par[4]);

  return 0.5*par[2]*(1+TMath::Erf(arg)+TMath::Erf(arg2));                                                          
}

const double TopTriggerEfficiencyProvider::lumiDefaults[TopTriggerEfficiencyProvider::RunEND] = {0.719,4.518,6.723,6.724};

const double TopTriggerEfficiencyProvider::muPtMin = 20;
const double TopTriggerEfficiencyProvider::muPtMax = 170;
const unsigned TopTriggerEfficiencyProvider::nMuPtbins = 9;
const double TopTriggerEfficiencyProvider::MuPtEdges[TopTriggerEfficiencyProvider::nMuPtbins] = {26, 30, 35, 40, 50, 60, 80, 120, 170}; //Upper bin edges

const double TopTriggerEfficiencyProvider::muEtaMax = 2.1;
const unsigned TopTriggerEfficiencyProvider::nMuEtabins = 6;
const double TopTriggerEfficiencyProvider::MuEtaEdges[TopTriggerEfficiencyProvider::nMuEtabins] = { -1.2, -0.9, 0, 0.9, 1.2, 2.1}; //Upper bin edges

const double TopTriggerEfficiencyProvider::Mu[TopTriggerEfficiencyProvider::RunEND][TopTriggerEfficiencyProvider::nMuEtabins][TopTriggerEfficiencyProvider::nMuPtbins][2] = {
  //RunA
  {{{ -0.443505, 81.3287 },{ -0.522171, 84.8046 },{ -0.483731, 86.5874 },{ -0.744917, 89.89 },{ -0.43631, 87.0964 },{ -0.55324, 90.0959 },{ -0.936651, 95.1745 },{ -0.936651, 95.1745 },{ -0.936651, 95.1745 }},
   {{ -0.443866, 82.6222 },{ -0.671708, 91.0484 },{ -0.536394, 87.0743 },{ -0.846873, 96.7495 },{ -0.888712, 93.935 },{ -0.364298, 90.5428 },{ -0.240203, 88.5414 },{ -0.258144, 92.9616 },{ -0.258144, 92.9616 }},
   {{ -0.555371, 93.0315 },{ -0.573405, 95.9916 },{ -0.426298, 94.7032 },{ -0.39659, 95.308 },{ -0.339545, 96.4976 },{ -0.269203, 97.1901 },{ -0.229674, 96.7866 },{ 0.0258061, 93.4331 },{ -0.203393, 95.152 }},
   {{ -1.21413, 101.224 },{ -0.656259, 97.8173 },{ -0.599322, 98.2122 },{ -0.378387, 95.9308 },{ -0.361177, 97.4062 },{ -0.215502, 96.5406 },{ -0.1002, 95.3349 },{ -0.1002, 95.3349 },{ -0.1002, 95.3349 }},
   {{ -1.05759, 90.7685 },{ -1.10415, 94.7221 },{ -0.780628, 89.9117 },{ -0.613222, 91.2053 },{ -0.516686, 90.6351 },{ -0.573917, 90.7205 },{ -0.788477, 95.0592 },{ -1.0068, 99.0481},{ -1.0068, 99.0481}},
   {{ -1.04479, 91.3312 },{ -1.11646, 93.81 },{ -0.498594, 87.878 },{ -0.69797, 89.6791 },{ -0.751468, 91.9183 },{ -0.773987, 94.2142 },{ -0.450186, 90.8389 },{ -0.450186, 90.8389 },{ -0.202428, 92.261 }}
  },
  //RunB
  {{{ -0.580772, 86.2114 },{ -0.568794, 88.3351 },{ -0.566051, 88.2863 },{ -0.575764, 88.6351 },{ -0.568379, 89.3024 },{ -0.501518, 89.4133 },{ -0.476553, 89.2978 },{ -0.709951, 92.0917 },{ -0.0735934, 82.4073 }},
   {{ -0.615997, 90.8219 },{ -0.572008, 92.4036 },{ -0.58489, 92.4411 },{ -0.60339, 92.1477 },{ -0.575334, 92.6824 },{ -0.392356, 90.8493 },{ -0.240684, 88.6373 },{ -0.443899, 90.6624 },{ -0.443899, 90.6624 }},
   {{ -0.372218, 95.8166 },{ -0.267186, 96.0525 },{ -0.246993, 96.2558 },{ -0.204472, 96.273 },{ -0.140678, 96.0691 },{ -0.103564, 95.9866 },{ -0.0736507, 95.6789 },{ 0.0315494, 93.9316 },{ 0.01063, 94.0137 }},
   {{ -0.302474, 95.0129 },{ -0.277433, 96.5573 },{ -0.24414, 96.7247 },{ -0.183502, 96.3556 },{ -0.13117, 96.2585 },{ -0.0992907, 96.0611 },{ -0.0845815, 96.1436 },{ -0.0940215, 96.1068 },{ 0.121171, 92.5582 }},
   {{ -0.56046, 90.1609 },{ -0.591251, 92.0693 },{ -0.628776, 92.0114 },{ -0.551652, 91.6252 },{ -0.546413, 91.8209 },{ -0.49454, 91.6313 },{ -0.473287, 90.8544 },{ -0.541743, 91.4817 },{ -0.38692, 90.139 }},
   {{ -0.503475, 86.5224 },{ -0.56011, 89.5062 },{ -0.503704, 89.2396 },{ -0.582343, 89.8923 },{ -0.572672, 90.2069 },{ -0.552614, 90.6787 },{ -0.576761, 91.2979 },{ -0.474196, 88.4965 },{ -0.173664, 84.1615 }}
  },
  //RunC
  {{{-0.571279,87.0846},{-0.533981,88.928},{-0.591511,89.848},{-0.53568,89.4719},{-0.542296,90.1983},{-0.482012,90.1028},{-0.53081,91.4121},{-0.307714,87.6212},{-0.390452,89.4369}},
   {{-0.796957,93.7175},{-0.64817,93.2972},{-0.503005,91.0048},{-0.601029,92.934},{-0.516062,92.1748},{-0.478505,92.5538},{-0.455128,92.2396},{-0.40606,90.4439},{-0.0967738,86.4584}},
   {{-0.452821,97.2454},{-0.262345,96.1039},{-0.226894,96.4633},{-0.19113,96.4788},{-0.146872,96.2697},{-0.110763,96.4102},{-0.0669531,95.8575},{-0.145058,96.3186},{-0.00409593,93.2636}},
   {{-0.32123,95.4474},{-0.28458,96.7562},{-0.247911,96.8901},{-0.218314,96.9768},{-0.14927,96.5579},{-0.0868727,96.1713},{-0.0897814,96.0711},{-0.0503798,95.4046},{-0.198773,96.3945}},
   {{-0.662772,91.4827},{-0.509919,91.5486},{-0.606883,92.4982},{-0.577071,92.5879},{-0.541891,92.3016},{-0.466426,91.8063},{-0.532383,91.9879},{-0.372588,91.5473},{-0.877677,97.6565}},
   {{-0.543129,89.1831},{-0.572025,91.6182},{-0.561975,91.8687},{-0.571482,91.7852},{-0.557628,91.9824},{-0.515657,92.5023},{-0.513312,92.2118},{-0.543376,92.2229},{-0.916195,96.568}}
  },
  //RunD
  {{{-0.559603,86.4509},{-0.598822,89.2944},{-0.626929,90.1797},{-0.615475,90.5355},{-0.601989,91.1204},{-0.553103,90.7105},{-0.503762,89.8463},{-0.514493,90.8873},{-0.315082,88.3852}},
   {{-0.731129,92.2053},{-0.533155,90.3695},{-0.63888,92.4616},{-0.606365,92.1992},{-0.586661,92.7167},{-0.472902,92.2548},{-0.480161,91.9503},{-0.628592,94.7134},{-0.184327,88.0228}},
   {{-0.448711,96.2602},{-0.355856,97.0172},{-0.25808,96.5448},{-0.227253,96.7538},{-0.189672,96.8371},{-0.119965,96.2196},{-0.103442,96.2588},{-0.0941967,95.9954},{-0.0194467,94.4452}},
   {{-0.448642,96.6813},{-0.343307,97.2393},{-0.284822,97.2141},{-0.212166,96.8169},{-0.165399,96.8536},{-0.140268,96.818},{-0.0758835,96.1456},{-0.015867,95.0009},{0.16366,92.2611}},
   {{-0.530979,89.2868},{-0.5438,91.4021},{-0.659374,92.6486},{-0.613014,91.9838},{-0.568717,92.345},{-0.495459,91.8363},{-0.478935,91.4989},{-0.43907,91.1471},{-0.347104,91.3012}},
   {{-0.625141,89.4339},{-0.63831,91.5581},{-0.589957,90.7481},{-0.613249,91.53},{-0.598851,91.91},{-0.61542,92.5498},{-0.552109,91.9124},{-0.482175,90.7674},{-0.396281,89.5621}}}
};


const double TopTriggerEfficiencyProvider::elPtMin = 30;
const double TopTriggerEfficiencyProvider::elPtMax = 250;
const unsigned TopTriggerEfficiencyProvider::nElPtbins = 8;
const double TopTriggerEfficiencyProvider::ElPtEdges[TopTriggerEfficiencyProvider::nElPtbins] = {35, 40, 45, 50, 55, 65, 90, 250}; //Upper bin edges

const double TopTriggerEfficiencyProvider::elEtaMax = 2.5;
const unsigned TopTriggerEfficiencyProvider::nElEtabins = 11;
const double TopTriggerEfficiencyProvider::ElEtaEdges[TopTriggerEfficiencyProvider::nElEtabins] = {-2.0, -1.566, -1.4442, -0.9, -0.3, 0.3, 0.9, 1.4442, 1.566, 2.0, 2.5}; //Upper bin edges

const double  TopTriggerEfficiencyProvider::El[TopTriggerEfficiencyProvider::RunEND][TopTriggerEfficiencyProvider::nElEtabins][TopTriggerEfficiencyProvider::nElPtbins][2] = {
  //RunA
  {{{ -0.825218, 92.2443 },{ -0.513999, 96.48 },{ -0.279763, 94.4349 },{ 0.413063, 84.4821 },{ -0.269271, 97.7322 },{ -0.255009, 99.5005 },{ 0.308502, 93.2643 },{ 0.172063, 94.0933 }},
   {{ -0.231398, 85.7897 },{ -1.09356, 103.738 },{ -0.900916, 102.58 },{ 0.140963, 90.5347 },{ -0.0453293, 94.692 },{ -0.204174, 98.9736 },{ 0.160869, 95.9038 },{ -3.53543, 141.601 }},
   {{ -3.68286, 131.18 },{ -0.329897, 71.9175 },{ -1.485, 101.072 },{ -1.52015, 82.7562 },{ 2.5567, 42.6392 },{ -2.8866, 129.278 },{ -4.28866, 134.928 },{ -3.13402, 83.2165 }},
   {{ -0.587647, 97.3019 },{ 0.0319944, 92.3192 },{ -0.187665, 95.9655 },{ 0.307528, 91.4491 },{ -0.171132, 97.1128 },{ 0.263362, 93.021 },{ 0.147425, 95.2204 },{ 0.113444, 94.1836 }},
   {{ 0.116837, 86.4031 },{ -0.222541, 95.1577 },{ -0.0714616, 95.4207 },{ -0.251174, 96.885 },{ 0.0505339, 94.3572 },{ -0.177235, 97.0972 },{ -0.110466, 97.7899 },{ 0.400477, 91.2531 }},
   {{ -0.490481, 95.1869 },{ -0.445, 94.336 },{ -0.351383, 94.6593 },{ -0.0954888, 93.114 },{ -0.105999, 94.3598 },{ 0.0156844, 92.6108 },{ -0.117639, 94.6204 },{ -0.175967, 95.731 }},
   {{ -0.579555, 95.9131 },{ -0.396138, 95.3344 },{ 0.0074649, 92.6832 },{ 0.0756341, 92.9839 },{ -0.119337, 96.2259 },{ -0.17416, 96.6119 },{ 0.0997535, 94.0867 },{ -0.0925249, 95.7996 }},
   {{ -0.413097, 94.4044 },{ -0.0425818, 92.967 },{ -0.107285, 95.3875 },{ -0.104958, 96.1393 },{ 0.305421, 90.8622 },{ -0.0575418, 96.822 },{ -0.0487788, 97.1719 },{ -0.135828, 100.439 }},
   {{ -2.75415, 105.973 },{ -1.36377, 82.5388 },{ -4.61043, 149.339 },{ 0.405728, 68.1742 },{ -1.15464, 51.7113 },{ -3.86094, 145.407 },{ 0.107585, 48.0366 },{ -3.11447, 110.912 }},
   {{ -0.125781, 84.3694 },{ -0.738151, 97.7015 },{ 0.252933, 89.7717 },{ -0.273442, 98.6304 },{ -0.637038, 101.705 },{ -0.110633, 97.5088 },{ 0.17547, 93.7154 },{ 0.827087, 82.0025 }},
   {{ 0.0747612, 82.3694 },{ -1.1396, 102.921 },{ 0.470551, 88.7065 },{ -1.22998, 105.129 },{ -0.429582, 97.8494 },{ -0.310045, 97.006 },{ -0.621432, 102.454 },{ -2.8866, 129.278 }}
  },
  //RunB
  {{{ -0.790996, 92.8684 },{ -0.868022, 101.415 },{ -0.663191, 100.084 },{ -0.324725, 97.2041 },{ -0.0112183, 94.421 },{ -0.0354748, 95.571 },{ -0.0261904, 97.6271 },{ 0.0323258, 97.4212 }},
   {{ -0.51037, 88.0465 },{ -0.241267, 89.6584 },{ -0.302579, 95.4578 },{ -0.240953, 95.422 },{ -0.019653, 94.5002 },{ -0.110164, 96.4098 },{ -0.0917242, 97.476 },{ 0.165737, 95.0058 }},
   {{ -0.46048, 90.1101 },{ -0.0121927, 87.986 },{ -0.204789, 87.879 },{ 1.04122, 79.5984 },{ 0.986689, 80.9701 },{ 0.575501, 84.5431 },{ -0.147624, 96.9818 },{ -4.61043, 149.339 }},
   {{ -0.338582, 92.1457 },{ -0.168657, 93.2656 },{ -0.144249, 94.7926 },{ -0.0953324, 95.4914 },{ -0.161156, 96.8989 },{ -0.0763181, 96.8968 },{ -0.102991, 97.4482 },{ -0.163084, 99.5908 }},
   {{ -0.389485, 94.2597 },{ -0.145082, 93.823 },{ -0.113259, 94.7892 },{ -0.185736, 96.8587 },{ -0.140887, 97.1334 },{ -0.0746056, 96.302 },{ -0.0270722, 96.6477 },{ -0.0642509, 97.5632 }},
   {{ -0.459304, 94.8166 },{ -0.19012, 93.8653 },{ -0.210821, 96.1639 },{ -0.149565, 96.2344 },{ -0.150851, 96.5881 },{ -0.0325923, 96.1688 },{ -0.0328916, 95.753 },{ -0.0207338, 96.786 }},
   {{ -0.362483, 93.3501 },{ -0.320542, 95.3481 },{ -0.247661, 96.6855 },{ -0.235058, 97.2905 },{ -0.135932, 96.7152 },{ -0.111729, 96.691 },{ 0.0360022, 95.1342 },{ -0.0582482, 96.7699 }},
   {{ -0.249482, 91.7171 },{ -0.186471, 93.6343 },{ -0.218698, 96.9521 },{ -0.173142, 96.8071 },{ -0.0577974, 96.519 },{ -0.0192344, 95.8409 },{ -0.0279452, 97.2177 },{ 0.0494261, 96.8353 }},
   {{ -0.381025, 81.8984 },{ 0.00151473, 91.3161 },{ 0.33521, 78.6672 },{ 0.216793, 85.6288 },{ 0.21801, 89.5816 },{ -2.81238, 139.595 },{ 0.0678302, 94.2422 },{ -2.8866, 129.278 }},
   {{ -0.754685, 91.6229 },{ -0.383056, 93.1184 },{ -0.613154, 98.2351 },{ -0.375232, 96.1994 },{ 0.025444, 92.068 },{ -0.051391, 94.8326 },{ -0.220417, 97.9589 },{ -0.284852, 98.9007 }},
   {{ -0.818073, 95.4817 },{ -0.313112, 94.2211 },{ -0.317781, 97.7711 },{ -0.13529, 96.6336 },{ -0.0382073, 95.5045 },{ 0.0400915, 95.8974 },{ -0.0484766, 97.1167 },{ -0.043748, 98.85 }}
  },
  //RunC
  {{{ -0.311934, 93.0178 },{ -0.260878, 96.4699 },{ -0.117029, 95.8833 },{ -0.273839, 99.2866 },{ -0.168145, 99.2982 },{ 0.0493812, 96.8755 },{ -0.0344248, 97.6634 },{ -0.0367031, 98.3638 }},
   {{ -0.276617, 88.5943 },{ -0.114412, 92.6599 },{ -0.278431, 96.6303 },{ -0.217677, 95.966 },{ -0.309235, 97.7897 },{ -0.178497, 98.4133 },{ -0.166938, 98.0438 },{ -0.137809, 99.7231 }},
   {{ 0.0569308, 77.3951 },{ -0.461482, 95.5476 },{ -0.0814439, 88.9399 },{ -0.56823, 100.93 },{ -0.578794, 99.2789 },{ -1.55522, 115.762 },{ 2.5567, 42.6392 },{ -0.329897, 71.9175 }},
   {{ -0.270983, 92.2595 },{ -0.161481, 94.5395 },{ -0.101135, 95.2158 },{ -0.218421, 97.7581 },{ -0.132861, 96.6406 },{ -0.166142, 98.5018 },{ -0.122488, 98.0689 },{ 0.0646483, 95.1999 }},
   {{ -0.134237, 91.9291 },{ -0.175133, 95.1764 },{ -0.120431, 95.7451 },{ -0.140557, 96.6855 },{ -0.108655, 96.9396 },{ -0.0399006, 96.5796 },{ -0.0831247, 97.4402 },{ -0.102968, 98.3544 }},
   {{ -0.295027, 93.9267 },{ -0.0954621, 93.3088 },{ -0.0369127, 94.2782 },{ -0.109758, 95.8349 },{ -0.121204, 96.5572 },{ -0.0321331, 96.1284 },{ -0.0183993, 96.0029 },{ -0.0670428, 97.3382 }},
   {{ -0.172492, 92.0315 },{ -0.105958, 93.8348 },{ -0.0921551, 94.5071 },{ -0.185245, 97.0433 },{ -0.0583832, 96.2355 },{ -0.0399834, 96.35 },{ 0.0329447, 95.3099 },{ -0.133855, 98.5083 }},
   {{ -0.142196, 91.1774 },{ -0.0973717, 93.3554 },{ -0.0546906, 94.3524 },{ -0.0279133, 94.9738 },{ -0.0018269, 95.5127 },{ -0.0991919, 97.2917 },{ -0.065851, 97.3426 },{ 0.000774623, 96.7095 }},
   {{ -2.27918, 114.287 },{ 0.354709, 84.3615 },{ -0.659211, 95.4007 },{ -1.7726, 111.257 },{ 0.336511, 90.6012 },{ -2.06099, 124.629 },{ 0.590986, 84.3078 },{ -2.71272, 133.538 }},
   {{ -0.287335, 88.4241 },{ -0.289218, 93.5376 },{ -0.324083, 97.3225 },{ -0.124846, 95.5197 },{ -0.0357254, 95.3525 },{ -0.0815937, 96.8007 },{ -0.13727, 98.6671 },{ 0.138023, 96.084 }},
   {{ -0.349829, 92.7235 },{ -0.374216, 98.3873 },{ -0.1424, 96.4831 },{ 0.0577815, 94.0101 },{ -0.186337, 98.5939 },{ -0.083714, 97.7461 },{ 0.016155, 96.499 },{ -0.0559243, 98.9037 }}
  },
  //RunD
  {{{ -0.288977, 93.4707 },{ -0.200446, 96.9398 },{ -0.133399, 96.7004 },{ -0.118904, 97.7414 },{ -0.00284111, 96.9234 },{ -0.109351, 99.2214 },{ 0.00985949, 97.339 },{ -0.0105005, 98.5243 }},
   {{ -0.214923, 88.4417 },{ -0.258975, 93.2524 },{ -0.269202, 96.7032 },{ -0.190978, 97.5693 },{ -0.186066, 97.5127 },{ -0.0420562, 97.0926 },{ 0.00456785, 96.0303 },{ 0.134784, 95.6853 }},
   {{ -0.14226, 87.4721 },{ -0.440841, 97.5787 },{ -0.876835, 108.479 },{ -0.598969, 103.588 },{ -1.38613, 116.365 },{ 1.41822, 72.1849 },{ 0.66277, 83.425 },{ 0.54755, 50.7349 }},
   {{ -0.30135, 92.6126 },{ -0.1872, 94.2051 },{ -0.0892346, 94.6326 },{ -0.00221551, 94.429 },{ -0.159433, 97.2915 },{ -0.0648652, 96.2888 },{ -0.00243157, 95.9603 },{ -0.137719, 99.2025 }},
   {{ -0.134148, 92.2631 },{ -0.0986902, 93.8239 },{ -0.173266, 96.253 },{ -0.0602324, 95.4422 },{ -0.0752047, 96.596 },{ -0.000440775, 95.991 },{ -0.0439867, 97.2182 },{ 0.102034, 96.025 }},
   {{ -0.158991, 92.3917 },{ -0.175072, 94.6271 },{ -0.213458, 96.7261 },{ -0.119788, 96.5248 },{ -0.0824755, 96.1566 },{ -0.0254257, 95.5483 },{ -0.0580598, 96.4767 },{ 0.0393006, 95.8104 }},
   {{ -0.141536, 91.7838 },{ -0.173395, 94.3474 },{ -0.146816, 95.6273 },{ -0.112538, 96.1276 },{ -0.0861974, 95.9659 },{ -0.0808012, 96.2742 },{ -0.0871886, 97.1708 },{ 0.0988425, 94.0852 }},
   {{ -0.250641, 91.6627 },{ -0.183276, 94.3107 },{ -0.0271963, 94.3248 },{ -0.0896818, 95.4054 },{ -0.0859566, 96.6738 },{ -0.0470498, 96.2786 },{ -0.0239201, 96.5576 },{ 0.030897, 96.3243 }},
   {{ 0.0745601, 81.5115 },{ -0.843005, 99.5018 },{ 0.425784, 88.8136 },{ -0.186912, 94.3276 },{ 0.375942, 83.1632 },{ 0.159762, 92.6988 },{ -0.37979, 101.929 },{ 2.5567, 42.6392 }},
   {{ -0.139836, 87.4286 },{ -0.287431, 95.8806 },{ -0.304054, 97.994 },{ -0.118963, 96.7688 },{ -0.140832, 98.4454 },{ -0.0606934, 96.9221 },{ 0.00122544, 96.465 },{ -0.219131, 100.664 }},
   {{ -0.261567, 92.8354 },{ -0.119367, 94.3766 },{ -0.0482993, 95.178 },{ -0.00185631, 95.6699 },{ 0.0615194, 94.7014 },{ -0.0527359, 98.1061 },{ -0.133299, 99.637 },{ -0.187558, 100.885 }},
  }
};


const unsigned TopTriggerEfficiencyProvider::nJetMin = 4;
const unsigned TopTriggerEfficiencyProvider::nJetNbins = 4;

const double TopTriggerEfficiencyProvider::jetEtaMax = 2.5;
const unsigned TopTriggerEfficiencyProvider::nJetEtabins = 5;
const double TopTriggerEfficiencyProvider::JetEtaEdges[TopTriggerEfficiencyProvider::nJetEtabins] = {-1.5,-0.50,0.50,1.50,2.5};

const double TopTriggerEfficiencyProvider::jetPtMin = 20;
const double TopTriggerEfficiencyProvider::jetPtMax = 100;
const unsigned TopTriggerEfficiencyProvider::nJetPtbins = 11;
const double TopTriggerEfficiencyProvider::JetPtEdges[TopTriggerEfficiencyProvider::nJetPtbins] = {22.5,25,27.5,30,32.5,35,37.5,40,42.5,45,100};

const double TopTriggerEfficiencyProvider::Jet[TopTriggerEfficiencyProvider::RunEND][TopTriggerEfficiencyProvider::nJetNbins][TopTriggerEfficiencyProvider::nJetEtabins][TopTriggerEfficiencyProvider::nJetPtbins] = {
  //RunA
  {{{95.1456, 97.7011, 100, 95.2381, 97.619, 100, 100, 97.2222, 100, 100, 100 },{98.5075, 96.7742, 96.9697, 98.0392, 100, 100, 100, 100, 100, 100, 100 },{97.6331, 97.1831, 97.4359, 98.9899, 98.9011, 100, 100, 100, 100, 100, 100 },{95.5556, 97.8723, 100, 98.8764, 100, 100, 100, 100, 100, 100, 100 },{98.0583, 96.5517, 96.6667, 100, 100, 100, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 96.4286, 100, 100, 100, 96.7742, 100, 100, 100 },{100, 95.6522, 95, 95, 95.2381, 98.3051, 100, 100, 100, 100, 100 },{100, 100, 92.5926, 97.619, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 90, 100, 100, 100, 100, 100, 100, 100 },{100, 94.4444, 100, 95.4545, 96.5517, 100, 96, 100, 100, 100, 100 } },
   {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{75, 100, 100, 91.6667, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 85.7143, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 75, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunB
  {{{98.9492, 98.8345, 98.939, 100, 100, 99.5708, 100, 100, 99.3506, 99.3506, 99.3506 },{98.6503, 98.6487, 99.3475, 99.5833, 100, 99.7506, 100, 100, 100, 100, 100 },{98.4598, 99.0398, 99.3721, 99.2714, 100, 100, 99.7585, 100, 100, 100, 100 },{97.981, 98.2609, 100, 99.5868, 99.7717, 100, 100, 100, 100, 100, 100 },{97.9626, 99.2647, 99.169, 99.322, 99.2278, 99.6364, 99.5595, 100, 99.4681, 99.4681, 99.4681 } },
      {{100, 98.2906, 100, 99.2481, 98.3051, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 99.5798, 100, 99.6183, 100, 100, 100, 100, 100 },{100, 99.4898, 100, 100, 100, 100, 99.6979, 100, 100, 100, 100 },{100, 100, 99.505, 100, 99.2509, 100, 100, 100, 100, 100, 100 },{98.1818, 99.1667, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
        {{100, 100, 100, 100, 98.1481, 98.1481, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 96.2963, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 98, 98.6667, 100, 100, 100, 100, 100, 100, 100 },{100, 95.2381, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunC
  {{{96.934, 97.6482, 98.7063, 99.0977, 99.6504, 100, 99.5349, 100, 100, 100, 100 },{97.7846, 98.5811, 98.5573, 99.3981, 99.9004, 99.442, 99.8741, 100, 100, 100, 100 },{97.2936, 97.6855, 98.636, 99.3416, 100, 99.7215, 100, 100, 100, 100, 100 },{97.6322, 97.6787, 98.8532, 99.3103, 99.5614, 99.5767, 100, 99.8233, 100, 100, 100 },{96.5125, 97.1624, 97.9344, 98.7552, 98.8994, 99.8198, 99.5485, 99.7059, 100, 100, 100 } },
      {{98.3607, 97.6654, 97.5155, 99.435, 99.4652, 100, 100, 100, 100, 100, 100 },{96.8153, 96.8447, 99.8039, 99.6552, 99.6593, 99.8492, 99.8387, 99.8195, 100, 100, 100 },{97.7778, 98.75, 98.9565, 99.8464, 99.7245, 100, 100, 100, 100, 100, 100 },{98.5577, 98.7685, 99.1394, 99.8358, 99.6835, 99.8457, 99.6737, 100, 100, 100, 100 },{94.7761, 96.337, 97.6261, 99.1736, 99.4859, 100, 99.7143, 100, 99.6109, 99.6109, 99.6109 } },
        {{100, 97.8261, 97.1831, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 98.2301, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 96.6667, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{94.1176, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 98.5294, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 96.7742, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunD
 {{{96.6353, 97.2198, 98.8479, 99.1724, 99.859, 99.8442, 100, 100, 100, 100, 100 },{96.4551, 97.2376, 97.116, 98.9906, 99.5686, 99.9035, 99.7712, 100, 99.8195, 99.8195, 99.8195 },{97.0513, 96.729, 98.3278, 99.2532, 99.7656, 99.6692, 100, 99.7573, 99.8563, 99.8563, 99.8563 },{96.848, 97.2477, 98.269, 99.184, 99.7604, 99.5618, 100, 99.8553, 99.8279, 99.8279, 99.8279 },{95.8388, 96.6697, 98.0372, 98.3689, 99.2647, 99.3232, 99.5968, 100, 100, 100, 100 } },
      {{97.0414, 97.8648, 97.8082, 99.0544, 99.5146, 100, 99.7525, 100, 100, 100, 100 },{98.1752, 97.992, 98.7402, 99.4039, 99.5658, 100, 99.8601, 100, 99.8051, 99.8051, 99.8051 },{97.7169, 98.3437, 99.3958, 99.4667, 99.1617, 100, 99.8779, 100, 100, 100, 100 },{97.7679, 97.5155, 98.7558, 99.0358, 99.4513, 99.8654, 99.8643, 100, 100, 100, 100 },{94.4444, 98.2609, 98.0149, 99.2823, 99.5146, 99.5283, 99.4911, 100, 100, 100, 100 } },
        {{81.8182, 100, 97.7273, 99.0991, 99.4083, 100, 100, 100, 100, 100, 100 },{100, 99, 97.541, 99.4872, 100, 100, 100, 100, 100, 100, 100 },{100, 97.7528, 99.2537, 100, 100, 99.7093, 100, 99.6764, 99.6855, 99.6855, 99.6855 },{93.75, 98.5294, 97.1631, 99.4595, 100, 100, 100, 100, 100, 100, 100 },{100, 94.2308, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 95.2381, 96.9697, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 98.913, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 97.9167, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
 }
};
  
const double TopTriggerEfficiencyProvider::JetDown[TopTriggerEfficiencyProvider::RunEND][TopTriggerEfficiencyProvider::nJetNbins][TopTriggerEfficiencyProvider::nJetEtabins][TopTriggerEfficiencyProvider::nJetPtbins] = {
  //RunA
  {{{97.9381, 98.75, 98.5714, 94.8718, 100, 100, 97.2222, 100, 100, 100, 100 },{98.3051, 97.9167, 95.098, 100, 100, 100, 100, 100, 100, 100, 100 },{97.0588, 96.9697, 97.5, 97.7778, 100, 100, 100, 100, 100, 100, 100 },{97.4359, 98.8764, 100, 98.8235, 100, 100, 100, 100, 100, 100, 100 },{97.0874, 96.2025, 96.7213, 100, 100, 97.2222, 100, 100, 100, 100, 100 } },
   {{100, 94.7368, 95.8333, 100, 100, 100, 96.5517, 100, 100, 100, 100 },{100, 100, 97.6744, 94.8718, 97.7273, 97.9592, 100, 100, 100, 100, 100 },{100, 100, 97.8723, 97.619, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 93.5484, 95, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 95.4545, 94.4444, 100, 100, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{50, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 87.5, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunB
  {{{98.7903, 98.5075, 100, 99.6678, 100, 99.5516, 100, 100, 100, 100, 100 },{98.5093, 99.361, 98.9492, 100, 100, 99.7487, 100, 100, 100, 100, 100 },{98.4163, 99.0881, 99.3443, 99.6364, 100, 99.7768, 100, 100, 100, 100, 100 },{98.2346, 99.3721, 99.6055, 99.789, 99.7636, 100, 100, 100, 100, 100, 100 },{98.4991, 99.2105, 99.4169, 99.2727, 99.2278, 99.5935, 99.5413, 99.4764, 100, 100, 100 } },
      {{98, 100, 99.2537, 99.0196, 99.3243, 99.3548, 100, 100, 100, 100, 100 },{100, 100, 100, 99.5556, 100, 99.6032, 100, 100, 100, 100, 100 },{100, 99.4048, 100, 100, 100, 100, 99.6875, 100, 100, 100, 100 },{100, 100, 100, 99.0196, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
        {{100, 100, 100, 100, 97.8723, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 97.8261, 100, 100, 100, 100, 100, 100, 100, 100 },{83.3333, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunC
  {{{96.9671, 98.3923, 99.177, 99.2138, 99.6587, 99.7967, 99.7696, 100, 100, 100, 100 },{97.8224, 98.4626, 98.9037, 99.6422, 99.8942, 99.4432, 100, 100, 100, 100, 100 },{97.7767, 98.0464, 98.8781, 99.4253, 99.9115, 99.7232, 100, 100, 99.844, 99.844, 99.844 },{97.3727, 98.5887, 99.1499, 99.5215, 99.559, 99.7886, 99.8532, 100, 100, 100, 100 },{96.1571, 97.2311, 98.939, 98.8539, 99.362, 99.6, 99.763, 99.7033, 99.6441, 99.6441, 99.6441 } },
      {{100, 97.8814, 98.8806, 99.3902, 99.7059, 100, 100, 100, 100, 100, 100 },{98.1132, 98.5075, 99.7773, 99.8024, 100, 99.8347, 99.8302, 99.7992, 100, 100, 100 },{97.8142, 98.0198, 99.6205, 100, 100, 100, 100, 100, 100, 100, 100 },{98.8764, 98.6072, 99.5781, 99.8211, 100, 99.8333, 99.8314, 100, 100, 100, 100 },{98.2143, 97.0085, 99.3485, 99.6711, 100, 100, 100, 99.6504, 100, 100, 100 } },
        {{100, 100, 98.4848, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 97.9167, 98.9362, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 98.4127, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 87.5, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunD
  {{{97.4398, 98.3638, 98.6779, 99.5588, 99.851, 100, 100, 100, 100, 100, 100 },{97.1278, 97.6205, 98.0676, 99.1822, 99.637, 99.896, 99.8899, 100, 99.8211, 99.8211, 99.8211 },{97.3963, 97.642, 98.4866, 99.6508, 99.6, 99.9147, 99.9018, 99.88, 99.8471, 99.8471, 99.8471 },{96.9844, 97.6562, 98.3642, 99.7722, 99.9173, 99.718, 99.8814, 99.8584, 100, 100, 100 },{96.2071, 97.2538, 98.951, 98.4848, 99.4186, 99.4434, 100, 100, 100, 100, 100 } },
      {{96.6102, 95.4167, 99.3691, 99.169, 99.7436, 99.7403, 100, 100, 100, 100, 100 },{98.9418, 98.434, 99.3209, 99.1409, 99.8478, 99.8563, 100, 100, 99.8, 99.8, 99.8 },{98.5, 98.0198, 99.4819, 99.4161, 99.4702, 99.8661, 99.8708, 99.8523, 99.8358, 99.8358, 99.8358 },{97.9592, 98.5714, 98.6301, 99.8464, 99.6909, 99.8567, 99.8549, 100, 100, 100, 100 },{97.541, 97.8261, 98.6034, 99.4169, 100, 99.4832, 99.7093, 100, 100, 100, 100 } },
        {{100, 97.3684, 98.6111, 97.9592, 100, 100, 100, 100, 100, 100, 100 },{90.9091, 100, 97.3214, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 97.0149, 99.2366, 100, 100, 99.6997, 100, 99.6678, 100, 100, 100 },{87.5, 100, 96.6387, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 93.75, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 88.8889, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  }
};

const double TopTriggerEfficiencyProvider::JetUp[TopTriggerEfficiencyProvider::RunEND][TopTriggerEfficiencyProvider::nJetNbins][TopTriggerEfficiencyProvider::nJetEtabins][TopTriggerEfficiencyProvider::nJetPtbins] = {
  //RunA
  {{{93.9655, 97.6471, 100, 98.2456, 95.1219, 100, 100, 97.5, 100, 100, 100 },{97.351, 97.3214, 96, 96.8085, 100, 100, 100, 100, 100, 100, 100 },{98.8024, 96.4286, 95.8333, 97.8723, 97.8022, 100, 98.5507, 100, 100, 100, 100 },{97.6562, 96.2617, 98.9583, 98.7342, 100, 100, 100, 100, 100, 100, 100 },{99.0385, 95.6044, 98.5294, 96.4912, 100, 100, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 97.1429, 100, 100, 100, 96.875, 100, 100, 100 },{100, 100, 97.8261, 98.2143, 91.1111, 100, 98.3333, 100, 100, 100, 100 },{100, 100, 91.9355, 100, 98.3871, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 95.6522, 96.2963, 100, 100, 100, 100, 100, 100 },{100, 100, 96.4286, 100, 96, 100, 96.4286, 100, 100, 100, 100 } },
   {{100, 100, 83.3333, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 75, 100, 100, 92.8571, 100, 100, 100, 100, 100, 100 },{100, 90.9091, 100, 94.4444, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 91.6667, 90, 100, 100, 100, 100, 100, 100, 100 } },
   {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 75, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 85.7143, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 75, 100, 100, 100, 100, 100 } }
  },
  //RunB
  {{{98.6842, 99.093, 98.7342, 99.4169, 99.6633, 100, 99.5671, 100, 99.4382, 99.4382, 99.4382 },{98.9399, 98.7198, 99.1708, 99.0329, 100, 100, 99.7159, 100, 100, 100, 100 },{98.0456, 98.9233, 99.0755, 99.4854, 99.7963, 100, 99.7674, 100, 100, 100, 100 },{98.3122, 97.3574, 99.8291, 99.7988, 99.5546, 99.7481, 100, 100, 100, 100, 100 },{98.5413, 98.3333, 99.1304, 99.6997, 99.6047, 98.8142, 99.5833, 99.5025, 99.4565, 99.4565, 99.4565 } },
      {{98.5075, 97.1831, 99.375, 99.4681, 98.7261, 98.8304, 100, 100, 100, 100, 100 },{98.4615, 99.5283, 99.5851, 99.6255, 100, 100, 100, 100, 100, 100, 100 },{97.8022, 100, 99.6047, 100, 100, 100, 99.7238, 100, 100, 100, 100 },{98.8506, 98.5577, 100, 99.5968, 99.3031, 100, 100, 100, 100, 100, 100 },{98.5075, 100, 99.3827, 99.4286, 100, 100, 100, 100, 100, 100, 100 } },
        {{100, 100, 100, 100, 98.5714, 100, 98.8095, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 99.3506, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 96.6667, 98.2143, 98.7654, 100, 100, 100, 100, 100, 100, 100 },{100, 96.1538, 100, 100, 100, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunC
  {{{96.9492, 97.1631, 98.3664, 98.8539, 99.5185, 99.4755, 99.7727, 99.7396, 100, 100, 100 },{97.1028, 97.8947, 98.858, 98.9256, 99.4129, 99.5638, 99.7487, 100, 100, 100, 100 },{96.6026, 97.6704, 97.7474, 99.2469, 99.8299, 99.8157, 99.8902, 100, 100, 100, 100 },{96.4169, 97.1847, 98.178, 99.0924, 99.4934, 99.4499, 99.8783, 99.8233, 100, 100, 100 },{96.2451, 96.0432, 97.1396, 98.7306, 98.8042, 99.3548, 99.789, 100, 99.6403, 99.6403, 99.6403 } },
      {{97.4026, 99.0991, 96.817, 98.9822, 99.5327, 99.7549, 99.7455, 100, 100, 100, 100 },{97.9058, 97.2574, 98.8235, 99.685, 100, 99.5757, 100, 99.6716, 100, 100, 100 },{98.008, 98.2857, 99.0854, 99.3113, 99.7305, 100, 100, 100, 100, 100, 100 },{99.0385, 98.1092, 98.4227, 99.7067, 99.4429, 99.858, 99.8447, 99.8314, 100, 100, 100 },{95.4839, 96.8391, 97.5806, 98.8318, 99.2736, 100, 99.4695, 100, 100, 100, 100 } },
        {{92.3077, 94.1176, 100, 98.3051, 100, 100, 100, 100, 100, 100, 100 },{94.4444, 98.2759, 98.4848, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 97.9798, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 97.5904, 99.2754, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 95.9184, 100, 100, 100, 100, 100, 99.3197, 99.3197, 99.3197 } },
          {{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 97.0588, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 96.875, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 } }
  },
  //RunD
  {{{95.3792, 96.0064, 98.5582, 98.6076, 99.5385, 99.7024, 100, 100, 100, 100, 100 },{96.202, 96.8617, 97.0366, 97.9389, 99.189, 99.7175, 99.8874, 99.8623, 99.8158, 99.8158, 99.8158 },{96.2582, 96.7287, 97.6045, 98.8334, 99.7647, 99.7537, 100, 99.8807, 99.8573, 99.8573, 99.8573 },{96.148, 96.5807, 97.8589, 98.7988, 99.5968, 99.492, 99.8929, 99.8557, 99.8267, 99.8267, 99.8267 },{95.4256, 96.1089, 96.9786, 98.5167, 98.4828, 99.67, 99.4094, 100, 100, 100, 100 } },
      {{98.3051, 97.5676, 97.1631, 98.9669, 99.1323, 99.7868, 99.7802, 100, 100, 100, 100 },{96.6443, 96.4527, 98.5876, 99.0968, 99.5968, 99.7512, 99.8713, 99.8529, 99.8152, 99.8152, 99.8152 },{98.2877, 98.2906, 98.5611, 99.284, 99.3355, 99.5465, 99.7704, 100, 99.8476, 99.8476, 99.8476 },{97.2125, 97.5472, 97.931, 98.5969, 99.6424, 99.6255, 99.8768, 99.859, 100, 100, 100 },{97.5247, 96.6292, 97.8903, 98.7705, 99.1453, 99.5984, 99.2941, 99.7268, 100, 100, 100 } },
        {{94.1176, 97.1014, 97.1963, 98.6301, 99.422, 100, 100, 100, 100, 100, 100 },{94.1176, 99.2126, 98.7179, 98.4674, 99.6169, 100, 100, 100, 100, 100, 100 },{95, 97.7273, 98.2955, 100, 100, 100, 99.7449, 100, 99.4413, 99.4413, 99.4413 },{96.6667, 97.0874, 99.3902, 97.7876, 100, 100, 100, 100, 100, 100, 100 },{92.8571, 98.3051, 97.4576, 99.3056, 99.4737, 100, 100, 100, 100, 100, 100 } },
          {{100, 100, 100, 96.7742, 100, 97.7273, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 },{100, 100, 100, 100, 100, 99.0826, 100, 100, 100, 100, 100 },{100, 100, 97.1429, 100, 98.6667, 100, 100, 100, 100, 100, 100 },{100, 100, 93.3333, 100, 100, 100, 100, 100, 100, 100, 100 } }
	}
};
